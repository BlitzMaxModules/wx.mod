' Copyright (c) 2007 Bruce A Henderson
' 
' Permission is hereby granted, free of charge, to any person obtaining a copy
' of this software and associated documentation files (the "Software"), to deal
' in the Software without restriction, including without limitation the rights
' to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
' copies of the Software, and to permit persons to whom the Software is
' furnished to do so, subject to the following conditions:
' 
' The above copyright notice and this permission notice shall be included in
' all copies or substantial portions of the Software.
' 
' THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
' IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
' FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
' AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
' LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
' OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
' THE SOFTWARE.
' 
SuperStrict

Rem
bbdoc: wxScintilla
End Rem
Module wx.wxScintilla

ModuleInfo "Version: 1.00"
ModuleInfo "License: MIT"
ModuleInfo "Author: Bruce A Henderson"
ModuleInfo "Copyright: (c) 2007 Bruce A Henderson"
ModuleInfo "Modserver: BRL"

?linux
ModuleInfo "CC_OPTS: -D__WXGTK__"
ModuleInfo "CC_OPTS: -D_FILE_OFFSET_BITS=64"
ModuleInfo "CC_OPTS: -D_LARGE_FILES"
ModuleInfo "CC_OPTS: -DWX_PRECOMP"
ModuleInfo "CC_OPTS: -D__WX__ -DSCI_LEXER"
?win32
ModuleInfo "CC_OPTS: -DHAVE_W32API_H"
ModuleInfo "CC_OPTS: -D__WXMSW__"
ModuleInfo "CC_OPTS: -D_UNICODE"
ModuleInfo "CC_OPTS: -DUNICODE"
ModuleInfo "CC_OPTS: -DSCI_LEXER -DSTATIC_BUILD -D__WX__"
?macos
ModuleInfo "CC_OPTS: -D__WXMAC__"
ModuleInfo "CC_OPTS: -D_FILE_OFFSET_BITS=64"
ModuleInfo "CC_OPTS: -D_LARGE_FILES"
ModuleInfo "CC_OPTS: -DWX_PRECOMP"
ModuleInfo "CC_OPTS: -DSCI_NAMESPACE -DMACOSX -D__WX__ -DSCI_LEXER"
?

Import "common.bmx"

Rem
bbdoc: 
End Rem
Type wxScintilla Extends wxControl

	Rem
	bbdoc: 
	End Rem
	Function CreateScintilla:wxScintilla(parent:wxWindow, id:Int = wxID_ANY, x:Int = -1, y:Int = -1, w:Int = -1, ..
			h:Int = -1, style:Int = 0)
		Return New wxScintilla.Create(parent, id, x, y, w, h, style)
	End Function
	
	Rem
	bbdoc: 
	End Rem
	Method Create:wxScintilla(parent:wxWindow, id:Int = wxID_ANY, x:Int = -1, y:Int = -1, w:Int = -1, ..
			h:Int = -1, style:Int = 0)
		'wxObjectPtr = bmx_wxscintilla_create(Self, parent.wxObjectPtr, id, x, y, w, h, style)
		Return Self
	End Method
	
	' The following code is generated... do not hand-edit this. You have been warned :-)
	' //++Autogenerated
	Rem
	bbdoc: Add text to the document at current position.
	End Rem
	Method AddText(text:String)
		bmx_wxscintilla_addtext(wxObjectPtr, text)
	End Method

	Rem
	bbdoc: Insert string at a position.
	End Rem
	Method InsertText(pos:Int, text:String)
		
	End Method

	Rem
	bbdoc: Delete all text in the document.
	End Rem
	Method ClearAll()
		
	End Method

	Rem
	bbdoc: Set all style bytes to 0, remove all folding information.
	End Rem
	Method ClearDocumentStyle()
		
	End Method

	Rem
	bbdoc: Returns the number of characters in the document.
	End Rem
	Method GetLength:Int()
		
	End Method

	Rem
	bbdoc: Returns the character byte at the position.
	End Rem
	Method GetCharAt:Int(pos:Int)
		
	End Method

	Rem
	bbdoc: Returns the position of the caret.
	End Rem
	Method GetCurrentPos:Int()
		
	End Method

	Rem
	bbdoc: Returns the position of the opposite end of the selection to the caret.
	End Rem
	Method GetAnchor:Int()
		
	End Method

	Rem
	bbdoc: Returns the style byte at the position.
	End Rem
	Method GetStyleAt:Int(pos:Int)
		
	End Method

	Rem
	bbdoc: Redoes the next action on the undo history.
	End Rem
	Method Redo()
		
	End Method

	Rem
	bbdoc: Choose between collecting actions into the undo
	about: history and discarding them.
	End Rem
	Method SetUndoCollection(collectUndo:Int)
		
	End Method

	Rem
	bbdoc: Select all the text in the document.
	End Rem
	Method SelectAll()
		
	End Method

	Rem
	bbdoc: Remember the current position in the undo history as the position
	about: at which the document was saved.
	End Rem
	Method SetSavePoint()
		
	End Method

	Rem
	bbdoc: Are there any redoable actions in the undo history?
	End Rem
	Method CanRedo:Int()
		
	End Method

	Rem
	bbdoc: Retrieve the line number at which a particular marker is located.
	End Rem
	Method MarkerLineFromHandle:Int(handle_:Int)
		
	End Method

	Rem
	bbdoc: Delete a marker.
	End Rem
	Method MarkerDeleteHandle(handle_:Int)
		
	End Method

	Rem
	bbdoc: Is undo history being collected?
	End Rem
	Method GetUndoCollection:Int()
		
	End Method

	Rem
	bbdoc: Are white space characters currently visible?
	about: Returns one of SCWS_* constants.
	End Rem
	Method GetViewWhiteSpace:Int()
		
	End Method

	Rem
	bbdoc: Make white space characters invisible, always visible or visible outside indentation.
	End Rem
	Method SetViewWhiteSpace(viewWS:Int)
		
	End Method

	Rem
	bbdoc: Find the position from a point within the window.
	End Rem
	Method PositionFromPoint:Int(x:Int, y:Int)
		
	End Method

	Rem
	bbdoc: Find the position from a point within the window but return
	about: INVALID_POSITION if not close to text.
	End Rem
	Method PositionFromPointClose:Int(x:Int, y:Int)
		
	End Method

	Rem
	bbdoc: Set caret to start of a line and ensure it is visible.
	End Rem
	Method GotoLine(line:Int)
		
	End Method

	Rem
	bbdoc: Set caret to a position and ensure it is visible.
	End Rem
	Method GotoPos(pos:Int)
		
	End Method

	Rem
	bbdoc: Set the selection anchor to a position. The anchor is the opposite
	about: end of the selection from the caret.
	End Rem
	Method SetAnchor(posAnchor:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the text of the line containing the caret.
	about: Returns the index of the caret on the line.
	End Rem
	Method GetCurLine:String(index:Int Var)
		
	End Method

	Rem
	bbdoc: Retrieve the position of the last correctly styled character.
	End Rem
	Method GetEndStyled:Int()
		
	End Method

	Rem
	bbdoc: Convert all line endings in the document to one mode.
	End Rem
	Method ConvertEOLs(eolMode:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the current end of line mode - one of CRLF, CR, or LF.
	End Rem
	Method GetEOLMode:Int()
		
	End Method

	Rem
	bbdoc: Set the current end of line mode.
	End Rem
	Method SetEOLMode(eolMode:Int)
		
	End Method

	Rem
	bbdoc: Set the current styling position to pos and the styling mask to mask.
	about: The styling mask can be used to protect some bits in each styling byte from modification.
	End Rem
	Method StartStyling(pos:Int, mask:Int)
		
	End Method

	Rem
	bbdoc: Change style from current styling position for length characters to a style
	about: and move the current styling position to after this newly styled segment.
	End Rem
	Method SetStyling(length:Int, style:Int)
		
	End Method

	Rem
	bbdoc: Is drawing done first into a buffer or direct to the screen?
	End Rem
	Method GetBufferedDraw:Int()
		
	End Method

	Rem
	bbdoc: If drawing is buffered then each line of text is drawn into a bitmap buffer
	about: before drawing it to the screen to avoid flicker.
	End Rem
	Method SetBufferedDraw(buffered:Int)
		
	End Method

	Rem
	bbdoc: Change the visible size of a tab to be a multiple of the width of a space character.
	End Rem
	Method SetTabWidth(tabWidth:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the visible size of a tab.
	End Rem
	Method GetTabWidth:Int()
		
	End Method

	Rem
	bbdoc: Set the code page used to interpret the bytes of the document as characters.
	about: The SC_CP_UTF8 value can be used to enter Unicode mode.
	End Rem
	Method SetCodePage(codePage:Int)
		
	End Method

	Rem
	bbdoc: Set the symbol used for a particular marker number.
	End Rem
	Method MarkerDefine(markerNumber:Int, markerSymbol:Int)
		
	End Method

	Rem
	bbdoc: Set the foreground colour used for a particular marker number.
	End Rem
	Method MarkerSetForeground(markerNumber:Int, fore:wxColour)
		
	End Method

	Rem
	bbdoc: Set the background colour used for a particular marker number.
	End Rem
	Method MarkerSetBackground(markerNumber:Int, back:wxColour)
		
	End Method

	Rem
	bbdoc: Add a marker to a line, returning an ID which can be used to find or delete the marker.
	End Rem
	Method MarkerAdd:Int(line:Int, markerNumber:Int)
		
	End Method

	Rem
	bbdoc: Delete a marker from a line.
	End Rem
	Method MarkerDelete(line:Int, markerNumber:Int)
		
	End Method

	Rem
	bbdoc: Delete all markers with a particular number from all lines.
	End Rem
	Method MarkerDeleteAll(markerNumber:Int)
		
	End Method

	Rem
	bbdoc: Get a bit mask of all the markers set on a line.
	End Rem
	Method MarkerGet:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Find the next line after lineStart that includes a marker in mask.
	End Rem
	Method MarkerNext:Int(lineStart:Int, markerMask:Int)
		
	End Method

	Rem
	bbdoc: Find the previous line before lineStart that includes a marker in mask.
	End Rem
	Method MarkerPrevious:Int(lineStart:Int, markerMask:Int)
		
	End Method

	Rem
	bbdoc: Define a marker from a pixmap.
	End Rem
	Method MarkerDefineBitmap(markerNumber:Int, bitmap:Byte Ptr)
		
	End Method

	Rem
	bbdoc: Add a set of markers to a line.
	End Rem
	Method MarkerAddSet(line:Int, set:Int)
		
	End Method

	Rem
	bbdoc: Set the alpha used for a marker that is drawn in the text area, not the margin.
	End Rem
	Method MarkerSetAlpha(markerNumber:Int, alpha:Int)
		
	End Method

	Rem
	bbdoc: Set a margin to be either numeric or symbolic.
	End Rem
	Method SetMarginType(margin:Int, marginType:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the type of a margin.
	End Rem
	Method GetMarginType:Int(margin:Int)
		
	End Method

	Rem
	bbdoc: Set the width of a margin to a width expressed in pixels.
	End Rem
	Method SetMarginWidth(margin:Int, pixelWidth:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the width of a margin in pixels.
	End Rem
	Method GetMarginWidth:Int(margin:Int)
		
	End Method

	Rem
	bbdoc: Set a mask that determines which markers are displayed in a margin.
	End Rem
	Method SetMarginMask(margin:Int, mask:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the marker mask of a margin.
	End Rem
	Method GetMarginMask:Int(margin:Int)
		
	End Method

	Rem
	bbdoc: Make a margin sensitive or insensitive to mouse clicks.
	End Rem
	Method SetMarginSensitive(margin:Int, sensitive:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the mouse click sensitivity of a margin.
	End Rem
	Method GetMarginSensitive:Int(margin:Int)
		
	End Method

	Rem
	bbdoc: Clear all the styles and make equivalent to the global default style.
	End Rem
	Method StyleClearAll()
		
	End Method

	Rem
	bbdoc: Set the foreground colour of a style.
	End Rem
	Method StyleSetForeground(style:Int, fore:wxColour)
		
	End Method

	Rem
	bbdoc: Set the background colour of a style.
	End Rem
	Method StyleSetBackground(style:Int, back:wxColour)
		
	End Method

	Rem
	bbdoc: Set a style to be bold or not.
	End Rem
	Method StyleSetBold(style:Int, bold:Int)
		
	End Method

	Rem
	bbdoc: Set a style to be italic or not.
	End Rem
	Method StyleSetItalic(style:Int, italic:Int)
		
	End Method

	Rem
	bbdoc: Set the size of characters of a style.
	End Rem
	Method StyleSetSize(style:Int, sizePoints:Int)
		
	End Method

	Rem
	bbdoc: Set the font of a style.
	End Rem
	Method StyleSetFont(style:Int, FontName:String)
		
	End Method

	Rem
	bbdoc: Set a style to have its end of line filled or not.
	End Rem
	Method StyleSetEOLFilled(style:Int, filled:Int)
		
	End Method

	Rem
	bbdoc: Reset the default style to its state at startup
	End Rem
	Method StyleResetDefault()
		
	End Method

	Rem
	bbdoc: Set a style to be underlined or not.
	End Rem
	Method StyleSetUnderline(style:Int, underline:Int)
		
	End Method

	Rem
	bbdoc: Set a style to be mixed case, or to force upper or lower case.
	End Rem
	Method StyleSetCase(style:Int, caseForce:Int)
		
	End Method

	Rem
	bbdoc: Set the character set of the font in a style.
	End Rem
	Method StyleSetCharacterSet(style:Int, characterSet:Int)
		
	End Method

	Rem
	bbdoc: Set a style to be a hotspot or not.
	End Rem
	Method StyleSetHotSpot(style:Int, hotspot:Int)
		
	End Method

	Rem
	bbdoc: Set the foreground colour of the selection and whether to use this setting.
	End Rem
	Method SetSelForeground(useSetting:Int, fore:wxColour)
		
	End Method

	Rem
	bbdoc: Set the background colour of the selection and whether to use this setting.
	End Rem
	Method SetSelBackground(useSetting:Int, back:wxColour)
		
	End Method

	Rem
	bbdoc: Get the alpha of the selection.
	End Rem
	Method GetSelAlpha:Int()
		
	End Method

	Rem
	bbdoc: Set the alpha of the selection.
	End Rem
	Method SetSelAlpha(alpha:Int)
		
	End Method

	Rem
	bbdoc: Set the foreground colour of the caret.
	End Rem
	Method SetCaretForeground(fore:wxColour)
		
	End Method

	Rem
	bbdoc: Drop all key mappings.
	End Rem
	Method CmdKeyClearAll()
		
	End Method

	Rem
	bbdoc: Set a style to be visible or not.
	End Rem
	Method StyleSetVisible(style:Int, visible:Int)
		
	End Method

	Rem
	bbdoc: Get the time in milliseconds that the caret is on and off.
	End Rem
	Method GetCaretPeriod:Int()
		
	End Method

	Rem
	bbdoc: Get the time in milliseconds that the caret is on and off. 0 = steady on.
	End Rem
	Method SetCaretPeriod(periodMilliseconds:Int)
		
	End Method

	Rem
	bbdoc: Set the set of characters making up words for when moving or selecting by word.
	about: First sets deaults like SetCharsDefault.
	End Rem
	Method SetWordChars(characters:String)
		
	End Method

	Rem
	bbdoc: Start a sequence of actions that is undone and redone as a unit.
	about: May be nested.
	End Rem
	Method BeginUndoAction()
		
	End Method

	Rem
	bbdoc: End a sequence of actions that is undone and redone as a unit.
	End Rem
	Method EndUndoAction()
		
	End Method

	Rem
	bbdoc: Set an indicator to plain, squiggle or TT.
	End Rem
	Method IndicatorSetStyle(indic:Int, style:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the style of an indicator.
	End Rem
	Method IndicatorGetStyle:Int(indic:Int)
		
	End Method

	Rem
	bbdoc: Set the foreground colour of an indicator.
	End Rem
	Method IndicatorSetForeground(indic:Int, fore:wxColour)
		
	End Method

	Rem
	bbdoc: Retrieve the foreground colour of an indicator.
	End Rem
	Method IndicatorGetForeground:wxColour(indic:Int)
		
	End Method

	Rem
	bbdoc: Set the foreground colour of all whitespace and whether to use this setting.
	End Rem
	Method SetWhitespaceForeground(useSetting:Int, fore:wxColour)
		
	End Method

	Rem
	bbdoc: Set the background colour of all whitespace and whether to use this setting.
	End Rem
	Method SetWhitespaceBackground(useSetting:Int, back:wxColour)
		
	End Method

	Rem
	bbdoc: Divide each styling byte into lexical class bits (default: 5) and indicator
	about: bits (default: 3). If a lexer requires more than 32 lexical states, then this
	is used to expand the possible states.
	End Rem
	Method SetStyleBits(bits:Int)
		
	End Method

	Rem
	bbdoc: Retrieve number of bits in style bytes used to hold the lexical state.
	End Rem
	Method GetStyleBits:Int()
		
	End Method

	Rem
	bbdoc: Used to hold extra styling information for each line.
	End Rem
	Method SetLineState(line:Int, state:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the extra styling information for a line.
	End Rem
	Method GetLineState:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the last line number that has line state.
	End Rem
	Method GetMaxLineState:Int()
		
	End Method

	Rem
	bbdoc: Is the background of the line containing the caret in a different colour?
	End Rem
	Method GetCaretLineVisible:Int()
		
	End Method

	Rem
	bbdoc: Display the background of the line containing the caret in a different colour.
	End Rem
	Method SetCaretLineVisible(show:Int)
		
	End Method

	Rem
	bbdoc: Get the colour of the background of the line containing the caret.
	End Rem
	Method GetCaretLineBackground:wxColour()
		
	End Method

	Rem
	bbdoc: Set the colour of the background of the line containing the caret.
	End Rem
	Method SetCaretLineBackground(back:wxColour)
		
	End Method

	Rem
	bbdoc: Set a style to be changeable or not (read only).
	about: Experimental feature, currently buggy.
	End Rem
	Method StyleSetChangeable(style:Int, changeable:Int)
		
	End Method

	Rem
	bbdoc: Display a auto-completion list.
	about: The lenEntered parameter indicates how many characters before
	the caret should be used to provide context.
	End Rem
	Method AutoCompShow(lenEntered:Int, itemList:String)
		
	End Method

	Rem
	bbdoc: Remove the auto-completion list from the screen.
	End Rem
	Method AutoCompCancel()
		
	End Method

	Rem
	bbdoc: Is there an auto-completion list visible?
	End Rem
	Method AutoCompActive:Int()
		
	End Method

	Rem
	bbdoc: Retrieve the position of the caret when the auto-completion list was displayed.
	End Rem
	Method AutoCompPosStart:Int()
		
	End Method

	Rem
	bbdoc: User has selected an item so remove the list and insert the selection.
	End Rem
	Method AutoCompComplete()
		
	End Method

	Rem
	bbdoc: Define a set of character that when typed cancel the auto-completion list.
	End Rem
	Method AutoCompStops(characterSet:String)
		
	End Method

	Rem
	bbdoc: Change the separator character in the string setting up an auto-completion list.
	about: Default is space but can be changed if items contain space.
	End Rem
	Method AutoCompSetSeparator(separatorCharacter:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the auto-completion list separator character.
	End Rem
	Method AutoCompGetSeparator:Int()
		
	End Method

	Rem
	bbdoc: Select the item in the auto-completion list that starts with a string.
	End Rem
	Method AutoCompSelect(text:String)
		
	End Method

	Rem
	bbdoc: Should the auto-completion list be cancelled if the user backspaces to a
	about: position before where the box was created.
	End Rem
	Method AutoCompSetCancelAtStart(cancel:Int)
		
	End Method

	Rem
	bbdoc: Retrieve whether auto-completion cancelled by backspacing before start.
	End Rem
	Method AutoCompGetCancelAtStart:Int()
		
	End Method

	Rem
	bbdoc: Define a set of characters that when typed will cause the autocompletion to
	about: choose the selected item.
	End Rem
	Method AutoCompSetFillUps(characterSet:String)
		
	End Method

	Rem
	bbdoc: Should a single item auto-completion list automatically choose the item.
	End Rem
	Method AutoCompSetChooseSingle(chooseSingle:Int)
		
	End Method

	Rem
	bbdoc: Retrieve whether a single item auto-completion list automatically choose the item.
	End Rem
	Method AutoCompGetChooseSingle:Int()
		
	End Method

	Rem
	bbdoc: Set whether case is significant when performing auto-completion searches.
	End Rem
	Method AutoCompSetIgnoreCase(ignoreCase:Int)
		
	End Method

	Rem
	bbdoc: Retrieve state of ignore case flag.
	End Rem
	Method AutoCompGetIgnoreCase:Int()
		
	End Method

	Rem
	bbdoc: Display a list of strings and send notification when user chooses one.
	End Rem
	Method UserListShow(listType:Int, itemList:String)
		
	End Method

	Rem
	bbdoc: Set whether or not autocompletion is hidden automatically when nothing matches.
	End Rem
	Method AutoCompSetAutoHide(autoHide:Int)
		
	End Method

	Rem
	bbdoc: Retrieve whether or not autocompletion is hidden automatically when nothing matches.
	End Rem
	Method AutoCompGetAutoHide:Int()
		
	End Method

	Rem
	bbdoc: Set whether or not autocompletion deletes any word characters
	about: after the inserted text upon completion.
	End Rem
	Method AutoCompSetDropRestOfWord(dropRestOfWord:Int)
		
	End Method

	Rem
	bbdoc: Retrieve whether or not autocompletion deletes any word characters
	about: after the inserted text upon completion.
	End Rem
	Method AutoCompGetDropRestOfWord:Int()
		
	End Method

	Rem
	bbdoc: Register an XPM image for use in autocompletion lists.
	End Rem
	Method RegisterImage(type_:Int, xpmData:String)
		
	End Method

	Rem
	bbdoc: Clear all the registered XPM images.
	End Rem
	Method ClearRegisteredImages()
		
	End Method

	Rem
	bbdoc: Retrieve the auto-completion list type-separator character.
	End Rem
	Method AutoCompGetTypeSeparator:Int()
		
	End Method

	Rem
	bbdoc: Change the type-separator character in the string setting up an auto-completion list.
	about: Default is '?' but can be changed if items contain '?'.
	End Rem
	Method AutoCompSetTypeSeparator(separatorCharacter:Int)
		
	End Method

	Rem
	bbdoc: Set the maximum width, in characters, of auto-completion and user lists.
	about: Set to 0 to autosize to fit longest item, which is the default.
	End Rem
	Method AutoCompSetMaxWidth(characterCount:Int)
		
	End Method

	Rem
	bbdoc: Get the maximum width, in characters, of auto-completion and user lists.
	End Rem
	Method AutoCompGetMaxWidth:Int()
		
	End Method

	Rem
	bbdoc: Set the maximum height, in rows, of auto-completion and user lists.
	about: The default is 5 rows.
	End Rem
	Method AutoCompSetMaxHeight(rowCount:Int)
		
	End Method

	Rem
	bbdoc: Set the maximum height, in rows, of auto-completion and user lists.
	End Rem
	Method AutoCompGetMaxHeight:Int()
		
	End Method

	Rem
	bbdoc: Set the number of spaces used for one level of indentation.
	End Rem
	Method SetIndent(indentSize:Int)
		
	End Method

	Rem
	bbdoc: Retrieve indentation size.
	End Rem
	Method GetIndent:Int()
		
	End Method

	Rem
	bbdoc: Indentation will only use space characters if useTabs is false, otherwise
	about: it will use a combination of tabs and spaces.
	End Rem
	Method SetUseTabs(useTabs:Int)
		
	End Method

	Rem
	bbdoc: Retrieve whether tabs will be used in indentation.
	End Rem
	Method GetUseTabs:Int()
		
	End Method

	Rem
	bbdoc: Change the indentation of a line to a number of columns.
	End Rem
	Method SetLineIndentation(line:Int, indentSize:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the number of columns that a line is indented.
	End Rem
	Method GetLineIndentation:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the position before the first non indentation character on a line.
	End Rem
	Method GetLineIndentPosition:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the column number of a position, taking tab width into account.
	End Rem
	Method GetColumn:Int(pos:Int)
		
	End Method

	Rem
	bbdoc: Show or hide the horizontal scroll bar.
	End Rem
	Method SetUseHorizontalScrollBar(show:Int)
		
	End Method

	Rem
	bbdoc: Is the horizontal scroll bar visible?
	End Rem
	Method GetUseHorizontalScrollBar:Int()
		
	End Method

	Rem
	bbdoc: Show or hide indentation guides.
	End Rem
	Method SetIndentationGuides(show:Int)
		
	End Method

	Rem
	bbdoc: Are the indentation guides visible?
	End Rem
	Method GetIndentationGuides:Int()
		
	End Method

	Rem
	bbdoc: Set the highlighted indentation guide column.
	about: 0 = no highlighted guide.
	End Rem
	Method SetHighlightGuide(column:Int)
		
	End Method

	Rem
	bbdoc: Get the highlighted indentation guide column.
	End Rem
	Method GetHighlightGuide:Int()
		
	End Method

	Rem
	bbdoc: Get the position after the last visible characters on a line.
	End Rem
	Method GetLineEndPosition:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Get the code page used to interpret the bytes of the document as characters.
	End Rem
	Method GetCodePage:Int()
		
	End Method

	Rem
	bbdoc: Get the foreground colour of the caret.
	End Rem
	Method GetCaretForeground:wxColour()
		
	End Method

	Rem
	bbdoc: In read-only mode?
	End Rem
	Method GetReadOnly:Int()
		
	End Method

	Rem
	bbdoc: Sets the position of the caret.
	End Rem
	Method SetCurrentPos(pos:Int)
		
	End Method

	Rem
	bbdoc: Sets the position that starts the selection - this becomes the anchor.
	End Rem
	Method SetSelectionStart(pos:Int)
		
	End Method

	Rem
	bbdoc: Returns the position at the start of the selection.
	End Rem
	Method GetSelectionStart:Int()
		
	End Method

	Rem
	bbdoc: Sets the position that ends the selection - this becomes the currentPosition.
	End Rem
	Method SetSelectionEnd(pos:Int)
		
	End Method

	Rem
	bbdoc: Returns the position at the end of the selection.
	End Rem
	Method GetSelectionEnd:Int()
		
	End Method

	Rem
	bbdoc: Sets the print magnification added to the point size of each style for printing.
	End Rem
	Method SetPrintMagnification(magnification:Int)
		
	End Method

	Rem
	bbdoc: Returns the print magnification.
	End Rem
	Method GetPrintMagnification:Int()
		
	End Method

	Rem
	bbdoc: Modify colours when printing for clearer printed text.
	End Rem
	Method SetPrintColourMode(mode:Int)
		
	End Method

	Rem
	bbdoc: Returns the print colour mode.
	End Rem
	Method GetPrintColourMode:Int()
		
	End Method

	Rem
	bbdoc: Find some text in the document.
	End Rem
	Method FindText:Int(minPos:Int, maxPos:Int, text:String, flags:Int)
		
	End Method

	Rem
	bbdoc: On Windows, will draw the document into a display context such as a printer.
	End Rem
	Method FormatRange:Int(doDraw:Int, startPos:Int, endPos:Int, draw:Byte Ptr, target:Byte Ptr, renderRect:Byte Ptr, pageRect:Byte Ptr)
		
	End Method

	Rem
	bbdoc: Retrieve the display line at the top of the display.
	End Rem
	Method GetFirstVisibleLine:Int()
		
	End Method

	Rem
	bbdoc: Retrieve the contents of a line.
	about: Returns the length of the line.
	End Rem
	Method GetLine:String(line:Int)
		
	End Method

	Rem
	bbdoc: Returns the number of lines in the document. There is always at least one.
	End Rem
	Method GetLineCount:Int()
		
	End Method

	Rem
	bbdoc: Sets the size in pixels of the left margin.
	End Rem
	Method SetMarginLeft(pixelWidth:Int)
		
	End Method

	Rem
	bbdoc: Returns the size in pixels of the left margin.
	End Rem
	Method GetMarginLeft:Int()
		
	End Method

	Rem
	bbdoc: Sets the size in pixels of the right margin.
	End Rem
	Method SetMarginRight(pixelWidth:Int)
		
	End Method

	Rem
	bbdoc: Returns the size in pixels of the right margin.
	End Rem
	Method GetMarginRight:Int()
		
	End Method

	Rem
	bbdoc: Is the document different from when it was last saved?
	End Rem
	Method GetModify:Int()
		
	End Method

	Rem
	bbdoc: Select a range of text.
	End Rem
	Method SetSelection(startPos:Int, endPos:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the selected text.
	about: Return the length of the text.
	End Rem
	Method GetSelectedText:String()
		
	End Method

	Rem
	bbdoc: Retrieve a range of text.
	about: Return the length of the text.
	End Rem
	Method GetTextRange:String(startPos:Int, endPos:Int)
		
	End Method

	Rem
	bbdoc: Draw the selection in normal style or with selection highlighted.
	End Rem
	Method HideSelection(normal:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the line containing a position.
	End Rem
	Method LineFromPosition:Int(pos:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the position at the start of a line.
	End Rem
	Method PositionFromLine:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Scroll horizontally and vertically.
	End Rem
	Method LineScroll(columns:Int, lines:Int)
		
	End Method

	Rem
	bbdoc: Ensure the caret is visible.
	End Rem
	Method EnsureCaretVisible()
		
	End Method

	Rem
	bbdoc: Replace the selected text with the argument text.
	End Rem
	Method ReplaceSelection(text:String)
		
	End Method

	Rem
	bbdoc: Set to read only or read write.
	End Rem
	Method SetReadOnly(readOnly:Int)
		
	End Method

	Rem
	bbdoc: Will a paste succeed?
	End Rem
	Method CanPaste:Int()
		
	End Method

	Rem
	bbdoc: Are there any undoable actions in the undo history?
	End Rem
	Method CanUndo:Int()
		
	End Method

	Rem
	bbdoc: Delete the undo history.
	End Rem
	Method EmptyUndoBuffer()
		
	End Method

	Rem
	bbdoc: Undo one action in the undo history.
	End Rem
	Method Undo()
		
	End Method

	Rem
	bbdoc: Cut the selection to the clipboard.
	End Rem
	Method Cut()
		
	End Method

	Rem
	bbdoc: Copy the selection to the clipboard.
	End Rem
	Method Copy()
		
	End Method

	Rem
	bbdoc: Paste the contents of the clipboard into the document replacing the selection.
	End Rem
	Method Paste()
		
	End Method

	Rem
	bbdoc: Clear the selection.
	End Rem
	Method Clear()
		
	End Method

	Rem
	bbdoc: Replace the contents of the document with the argument text.
	End Rem
	Method SetText(text:String)
		
	End Method

	Rem
	bbdoc: Retrieve all the text in the document.
	about: Returns number of characters retrieved.
	End Rem
	Method GetText:String()
		
	End Method

	Rem
	bbdoc: Retrieve the number of characters in the document.
	End Rem
	Method GetTextLength:Int()
		
	End Method

	Rem
	bbdoc: Set to overtype (true) or insert mode.
	End Rem
	Method SetOvertype(overtype:Int)
		
	End Method

	Rem
	bbdoc: Returns true if overtype mode is active otherwise false is returned.
	End Rem
	Method GetOvertype:Int()
		
	End Method

	Rem
	bbdoc: Set the width of the insert mode caret.
	End Rem
	Method SetCaretWidth(pixelWidth:Int)
		
	End Method

	Rem
	bbdoc: Returns the width of the insert mode caret.
	End Rem
	Method GetCaretWidth:Int()
		
	End Method

	Rem
	bbdoc: Sets the position that starts the target which is used for updating the
	about: document without affecting the scroll position.
	End Rem
	Method SetTargetStart(pos:Int)
		
	End Method

	Rem
	bbdoc: Get the position that starts the target.
	End Rem
	Method GetTargetStart:Int()
		
	End Method

	Rem
	bbdoc: Sets the position that ends the target which is used for updating the
	about: document without affecting the scroll position.
	End Rem
	Method SetTargetEnd(pos:Int)
		
	End Method

	Rem
	bbdoc: Get the position that ends the target.
	End Rem
	Method GetTargetEnd:Int()
		
	End Method

	Rem
	bbdoc: Replace the target text with the argument text.
	about: Text is counted so it can contain NULs.
	Returns the length of the replacement text.
	End Rem
	Method ReplaceTarget:Int(text:String)
		Return bmx_wxscintilla_replacetarget(wxObjectPtr, text)
	End Method

	Rem
	bbdoc: Replace the target text with the argument text after \d processing.
	about: Text is counted so it can contain NULs.
	Looks for \d where d is between 1 and 9 and replaces these with the strings
	matched in the last search operation which were surrounded by \( and \).
	Returns the length of the replacement text including any change
	caused by processing the \d patterns.
	End Rem
	Method ReplaceTargetRE:Int(text:String)
		Return bmx_wxscintilla_replacetargetre(wxObjectPtr, text)
	End Method

	Rem
	bbdoc: Search for a counted string in the target and set the target to the found
	about: range. Text is counted so it can contain NULs.
	Returns length of range or -1 for failure in which case target is not moved.
	End Rem
	Method SearchInTarget:Int(text:String)
		Return bmx_wxscintilla_searchintarget(wxObjectPtr, text)
	End Method

	Rem
	bbdoc: Set the search flags used by SearchInTarget.
	End Rem
	Method SetSearchFlags(flags:Int)
		
	End Method

	Rem
	bbdoc: Get the search flags used by SearchInTarget.
	End Rem
	Method GetSearchFlags:Int()
		
	End Method

	Rem
	bbdoc: Show a call tip containing a definition near position pos.
	End Rem
	Method CallTipShow(pos:Int, definition:String)
		
	End Method

	Rem
	bbdoc: Remove the call tip from the screen.
	End Rem
	Method CallTipCancel()
		
	End Method

	Rem
	bbdoc: Is there an active call tip?
	End Rem
	Method CallTipActive:Int()
		
	End Method

	Rem
	bbdoc: Retrieve the position where the caret was before displaying the call tip.
	End Rem
	Method CallTipPosAtStart:Int()
		
	End Method

	Rem
	bbdoc: Highlight a segment of the definition.
	End Rem
	Method CallTipSetHighlight(startPos:Int, endPos:Int)
		
	End Method

	Rem
	bbdoc: Set the background colour for the call tip.
	End Rem
	Method CallTipSetBackground(back:wxColour)
		
	End Method

	Rem
	bbdoc: Set the foreground colour for the call tip.
	End Rem
	Method CallTipSetForeground(fore:wxColour)
		
	End Method

	Rem
	bbdoc: Set the foreground colour for the highlighted part of the call tip.
	End Rem
	Method CallTipSetForegroundHighlight(fore:wxColour)
		
	End Method

	Rem
	bbdoc: Enable use of STYLE_CALLTIP and set call tip tab size in pixels.
	End Rem
	Method CallTipUseStyle(tabSize:Int)
		
	End Method

	Rem
	bbdoc: Find the display line of a document line taking hidden lines into account.
	End Rem
	Method VisibleFromDocLine:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Find the document line of a display line taking hidden lines into account.
	End Rem
	Method DocLineFromVisible:Int(lineDisplay:Int)
		
	End Method

	Rem
	bbdoc: The number of display lines needed to wrap a document line
	End Rem
	Method WrapCount:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Set the fold level of a line.
	about: This encodes an integer level along with flags indicating whether the
	line is a header and whether it is effectively white space.
	End Rem
	Method SetFoldLevel(line:Int, level:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the fold level of a line.
	End Rem
	Method GetFoldLevel:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Find the last child line of a header line.
	End Rem
	Method GetLastChild:Int(line:Int, level:Int)
		
	End Method

	Rem
	bbdoc: Find the parent line of a child line.
	End Rem
	Method GetFoldParent:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Make a range of lines visible.
	End Rem
	Method ShowLines(lineStart:Int, lineEnd:Int)
		
	End Method

	Rem
	bbdoc: Make a range of lines invisible.
	End Rem
	Method HideLines(lineStart:Int, lineEnd:Int)
		
	End Method

	Rem
	bbdoc: Is a line visible?
	End Rem
	Method GetLineVisible:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Show the children of a header line.
	End Rem
	Method SetFoldExpanded(line:Int, expanded:Int)
		
	End Method

	Rem
	bbdoc: Is a header line expanded?
	End Rem
	Method GetFoldExpanded:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Switch a header line between expanded and contracted.
	End Rem
	Method ToggleFold(line:Int)
		
	End Method

	Rem
	bbdoc: Ensure a particular line is visible by expanding any header line hiding it.
	End Rem
	Method EnsureVisible(line:Int)
		
	End Method

	Rem
	bbdoc: Set some style options for folding.
	End Rem
	Method SetFoldFlags(flags:Int)
		
	End Method

	Rem
	bbdoc: Ensure a particular line is visible by expanding any header line hiding it.
	about: Use the currently set visibility policy to determine which range to display.
	End Rem
	Method EnsureVisibleEnforcePolicy(line:Int)
		
	End Method

	Rem
	bbdoc: Sets whether a tab pressed when caret is within indentation indents.
	End Rem
	Method SetTabIndents(tabIndents:Int)
		
	End Method

	Rem
	bbdoc: Does a tab pressed when caret is within indentation indent?
	End Rem
	Method GetTabIndents:Int()
		
	End Method

	Rem
	bbdoc: Sets whether a backspace pressed when caret is within indentation unindents.
	End Rem
	Method SetBackSpaceUnIndents(bsUnIndents:Int)
		
	End Method

	Rem
	bbdoc: Does a backspace pressed when caret is within indentation unindent?
	End Rem
	Method GetBackSpaceUnIndents:Int()
		
	End Method

	Rem
	bbdoc: Sets the time the mouse must sit still to generate a mouse dwell event.
	End Rem
	Method SetMouseDwellTime(periodMilliseconds:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the time the mouse must sit still to generate a mouse dwell event.
	End Rem
	Method GetMouseDwellTime:Int()
		
	End Method

	Rem
	bbdoc: Get position of start of word.
	End Rem
	Method WordStartPosition:Int(pos:Int, onlyWordCharacters:Int)
		
	End Method

	Rem
	bbdoc: Get position of end of word.
	End Rem
	Method WordEndPosition:Int(pos:Int, onlyWordCharacters:Int)
		
	End Method

	Rem
	bbdoc: Sets whether text is word wrapped.
	End Rem
	Method SetWrapMode(mode:Int)
		
	End Method

	Rem
	bbdoc: Retrieve whether text is word wrapped.
	End Rem
	Method GetWrapMode:Int()
		
	End Method

	Rem
	bbdoc: Set the display mode of visual flags for wrapped lines.
	End Rem
	Method SetWrapVisualFlags(wrapVisualFlags:Int)
		
	End Method

	Rem
	bbdoc: Retrive the display mode of visual flags for wrapped lines.
	End Rem
	Method GetWrapVisualFlags:Int()
		
	End Method

	Rem
	bbdoc: Set the location of visual flags for wrapped lines.
	End Rem
	Method SetWrapVisualFlagsLocation(wrapVisualFlagsLocation:Int)
		
	End Method

	Rem
	bbdoc: Retrive the location of visual flags for wrapped lines.
	End Rem
	Method GetWrapVisualFlagsLocation:Int()
		
	End Method

	Rem
	bbdoc: Set the start indent for wrapped lines.
	End Rem
	Method SetWrapStartIndent(indent:Int)
		
	End Method

	Rem
	bbdoc: Retrive the start indent for wrapped lines.
	End Rem
	Method GetWrapStartIndent:Int()
		
	End Method

	Rem
	bbdoc: Sets the degree of caching of layout information.
	End Rem
	Method SetLayoutCache(mode:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the degree of caching of layout information.
	End Rem
	Method GetLayoutCache:Int()
		
	End Method

	Rem
	bbdoc: Sets the document width assumed for scrolling.
	End Rem
	Method SetScrollWidth(pixelWidth:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the document width assumed for scrolling.
	End Rem
	Method GetScrollWidth:Int()
		
	End Method

	Rem
	bbdoc: Measure the pixel width of some text in a particular style.
	about: NUL terminated text argument.
	Does not handle tab or control characters.
	End Rem
	Method TextWidth:Int(style:Int, text:String)
		
	End Method

	Rem
	bbdoc: Sets the scroll range so that maximum scroll position has
	about: the last line at the bottom of the view (default).
	Setting this to false allows scrolling one page below the last line.
	End Rem
	Method SetEndAtLastLine(endAtLastLine:Int)
		
	End Method

	Rem
	bbdoc: Retrieve whether the maximum scroll position has the last
	about: line at the bottom of the view.
	End Rem
	Method GetEndAtLastLine:Int()
		
	End Method

	Rem
	bbdoc: Retrieve the height of a particular line of text in pixels.
	End Rem
	Method TextHeight:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Show or hide the vertical scroll bar.
	End Rem
	Method SetUseVerticalScrollBar(show:Int)
		
	End Method

	Rem
	bbdoc: Is the vertical scroll bar visible?
	End Rem
	Method GetUseVerticalScrollBar:Int()
		
	End Method

	Rem
	bbdoc: Append a string to the end of the document without changing the selection.
	End Rem
	Method AppendText(text:String)
		bmx_wxscintilla_appendtext(wxObjectPtr, text)
	End Method

	Rem
	bbdoc: Is drawing done in two phases with backgrounds drawn before faoregrounds?
	End Rem
	Method GetTwoPhaseDraw:Int()
		
	End Method

	Rem
	bbdoc: In twoPhaseDraw mode, drawing is performed in two phases, first the background
	about: and then the foreground. This avoids chopping off characters that overlap the next run.
	End Rem
	Method SetTwoPhaseDraw(twoPhase:Int)
		
	End Method

	Rem
	bbdoc: Make the target range start and end be the same as the selection range start and end.
	End Rem
	Method TargetFromSelection()
		
	End Method

	Rem
	bbdoc: Join the lines in the target.
	End Rem
	Method LinesJoin()
		
	End Method

	Rem
	bbdoc: Split the lines in the target into lines that are less wide than pixelWidth
	about: where possible.
	End Rem
	Method LinesSplit(pixelWidth:Int)
		
	End Method

	Rem
	bbdoc: Set the colours used as a chequerboard pattern in the fold margin
	End Rem
	Method SetFoldMarginColour(useSetting:Int, back:wxColour)
		
	End Method

	Rem
	bbdoc: Set the colours used as a chequerboard pattern in the fold margin
	End Rem
	Method SetFoldMarginHiColour(useSetting:Int, fore:wxColour)
		
	End Method

	Rem
	bbdoc: Move caret down one line.
	End Rem
	Method LineDown()
		
	End Method

	Rem
	bbdoc: Move caret down one line extending selection to new caret position.
	End Rem
	Method LineDownExtend()
		
	End Method

	Rem
	bbdoc: Move caret up one line.
	End Rem
	Method LineUp()
		
	End Method

	Rem
	bbdoc: Move caret up one line extending selection to new caret position.
	End Rem
	Method LineUpExtend()
		
	End Method

	Rem
	bbdoc: Move caret left one character.
	End Rem
	Method CharLeft()
		
	End Method

	Rem
	bbdoc: Move caret left one character extending selection to new caret position.
	End Rem
	Method CharLeftExtend()
		
	End Method

	Rem
	bbdoc: Move caret right one character.
	End Rem
	Method CharRight()
		
	End Method

	Rem
	bbdoc: Move caret right one character extending selection to new caret position.
	End Rem
	Method CharRightExtend()
		
	End Method

	Rem
	bbdoc: Move caret left one word.
	End Rem
	Method WordLeft()
		
	End Method

	Rem
	bbdoc: Move caret left one word extending selection to new caret position.
	End Rem
	Method WordLeftExtend()
		
	End Method

	Rem
	bbdoc: Move caret right one word.
	End Rem
	Method WordRight()
		
	End Method

	Rem
	bbdoc: Move caret right one word extending selection to new caret position.
	End Rem
	Method WordRightExtend()
		
	End Method

	Rem
	bbdoc: Move caret to first position on line.
	End Rem
	Method Home()
		
	End Method

	Rem
	bbdoc: Move caret to first position on line extending selection to new caret position.
	End Rem
	Method HomeExtend()
		
	End Method

	Rem
	bbdoc: Move caret to last position on line.
	End Rem
	Method LineEnd()
		
	End Method

	Rem
	bbdoc: Move caret to last position on line extending selection to new caret position.
	End Rem
	Method LineEndExtend()
		
	End Method

	Rem
	bbdoc: Move caret to first position in document.
	End Rem
	Method DocumentStart()
		
	End Method

	Rem
	bbdoc: Move caret to first position in document extending selection to new caret position.
	End Rem
	Method DocumentStartExtend()
		
	End Method

	Rem
	bbdoc: Move caret to last position in document.
	End Rem
	Method DocumentEnd()
		
	End Method

	Rem
	bbdoc: Move caret to last position in document extending selection to new caret position.
	End Rem
	Method DocumentEndExtend()
		
	End Method

	Rem
	bbdoc: Move caret one page up.
	End Rem
	Method PageUp()
		
	End Method

	Rem
	bbdoc: Move caret one page up extending selection to new caret position.
	End Rem
	Method PageUpExtend()
		
	End Method

	Rem
	bbdoc: Move caret one page down.
	End Rem
	Method PageDown()
		
	End Method

	Rem
	bbdoc: Move caret one page down extending selection to new caret position.
	End Rem
	Method PageDownExtend()
		
	End Method

	Rem
	bbdoc: Switch from insert to overtype mode or the reverse.
	End Rem
	Method EditToggleOvertype()
		
	End Method

	Rem
	bbdoc: Cancel any modes such as call tip or auto-completion list display.
	End Rem
	Method Cancel()
		
	End Method

	Rem
	bbdoc: Delete the selection or if no selection, the character before the caret.
	End Rem
	Method DeleteBack()
		
	End Method

	Rem
	bbdoc: If selection is empty or all on one line replace the selection with a tab character.
	about: If more than one line selected, indent the lines.
	End Rem
	Method Tab()
		
	End Method

	Rem
	bbdoc: Dedent the selected lines.
	End Rem
	Method BackTab()
		
	End Method

	Rem
	bbdoc: Insert a new line, may use a CRLF, CR or LF depending on EOL mode.
	End Rem
	Method NewLine()
		
	End Method

	Rem
	bbdoc: Insert a Form Feed character.
	End Rem
	Method FormFeed()
		
	End Method

	Rem
	bbdoc: Move caret to before first visible character on line.
	about: If already there move to first character on line.
	End Rem
	Method VCHome()
		
	End Method

	Rem
	bbdoc: Like VCHome but extending selection to new caret position.
	End Rem
	Method VCHomeExtend()
		
	End Method

	Rem
	bbdoc: Magnify the displayed text by increasing the sizes by 1 point.
	End Rem
	Method ZoomIn()
		
	End Method

	Rem
	bbdoc: Make the displayed text smaller by decreasing the sizes by 1 point.
	End Rem
	Method ZoomOut()
		
	End Method

	Rem
	bbdoc: Delete the word to the left of the caret.
	End Rem
	Method DelWordLeft()
		
	End Method

	Rem
	bbdoc: Delete the word to the right of the caret.
	End Rem
	Method DelWordRight()
		
	End Method

	Rem
	bbdoc: Cut the line containing the caret.
	End Rem
	Method LineCut()
		
	End Method

	Rem
	bbdoc: Delete the line containing the caret.
	End Rem
	Method LineDelete()
		
	End Method

	Rem
	bbdoc: Switch the current line with the previous.
	End Rem
	Method LineTranspose()
		
	End Method

	Rem
	bbdoc: Duplicate the current line.
	End Rem
	Method LineDuplicate()
		
	End Method

	Rem
	bbdoc: Transform the selection to lower case.
	End Rem
	Method LowerCase()
		
	End Method

	Rem
	bbdoc: Transform the selection to upper case.
	End Rem
	Method UpperCase()
		
	End Method

	Rem
	bbdoc: Scroll the document down, keeping the caret visible.
	End Rem
	Method LineScrollDown()
		
	End Method

	Rem
	bbdoc: Scroll the document up, keeping the caret visible.
	End Rem
	Method LineScrollUp()
		
	End Method

	Rem
	bbdoc: Delete the selection or if no selection, the character before the caret.
	about: Will not delete the character before at the start of a line.
	End Rem
	Method DeleteBackNotLine()
		
	End Method

	Rem
	bbdoc: Move caret to first position on display line.
	End Rem
	Method HomeDisplay()
		
	End Method

	Rem
	bbdoc: Move caret to first position on display line extending selection to
	about: new caret position.
	End Rem
	Method HomeDisplayExtend()
		
	End Method

	Rem
	bbdoc: Move caret to last position on display line.
	End Rem
	Method LineEndDisplay()
		
	End Method

	Rem
	bbdoc: Move caret to last position on display line extending selection to new
	about: caret position.
	End Rem
	Method LineEndDisplayExtend()
		
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method HomeWrap()
		
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method HomeWrapExtend()
		
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method LineEndWrap()
		
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method LineEndWrapExtend()
		
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method VCHomeWrap()
		
	End Method

	Rem
	bbdoc: These are like their namesakes Home(Extend)?, LineEnd(Extend)?, VCHome(Extend)?
	about: except they behave differently when word-wrap is enabled:
	They go first to the start / end of the display line, like (Home|LineEnd)Display
	The difference is that, the cursor is already at the point, it goes on to the start
	or end of the document line, as appropriate for (Home|LineEnd|VCHome)(Extend)?.
	End Rem
	Method VCHomeWrapExtend()
		
	End Method

	Rem
	bbdoc: Copy the line containing the caret.
	End Rem
	Method LineCopy()
		
	End Method

	Rem
	bbdoc: Move the caret inside current view if it's not there already.
	End Rem
	Method MoveCaretInsideView()
		
	End Method

	Rem
	bbdoc: How many characters are on a line, including end of line characters?
	End Rem
	Method LineLength:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Highlight the characters at two positions.
	End Rem
	Method BraceHighlight(pos1:Int, pos2:Int)
		
	End Method

	Rem
	bbdoc: Highlight the character at a position indicating there is no matching brace.
	End Rem
	Method BraceBadLight(pos:Int)
		
	End Method

	Rem
	bbdoc: Find the position of a matching brace or INVALID_POSITION if no match.
	End Rem
	Method BraceMatch:Int(pos:Int)
		
	End Method

	Rem
	bbdoc: Are the end of line characters visible?
	End Rem
	Method GetViewEOL:Int()
		
	End Method

	Rem
	bbdoc: Make the end of line characters visible or invisible.
	End Rem
	Method SetViewEOL(visible:Int)
		
	End Method

	Rem
	bbdoc: Retrieve a pointer to the document object.
	End Rem
	Method GetDocPointer:Byte Ptr()
		
	End Method

	Rem
	bbdoc: Change the document object used.
	End Rem
	Method SetDocPointer(docPointer:Byte Ptr)
		
	End Method

	Rem
	bbdoc: Set which document modification events are sent to the container.
	End Rem
	Method SetModEventMask(mask:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the column number which text should be kept within.
	End Rem
	Method GetEdgeColumn:Int()
		
	End Method

	Rem
	bbdoc: Set the column number of the edge.
	about: If text goes past the edge then it is highlighted.
	End Rem
	Method SetEdgeColumn(column:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the edge highlight mode.
	End Rem
	Method GetEdgeMode:Int()
		
	End Method

	Rem
	bbdoc: The edge may be displayed by a line (EDGE_LINE) or by highlighting text that
	about: goes beyond it (EDGE_BACKGROUND) or not displayed at all (EDGE_NONE).
	End Rem
	Method SetEdgeMode(mode:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the colour used in edge indication.
	End Rem
	Method GetEdgeColour:wxColour()
		
	End Method

	Rem
	bbdoc: Change the colour used in edge indication.
	End Rem
	Method SetEdgeColour(edgeColour:wxColour)
		
	End Method

	Rem
	bbdoc: Sets the current caret position to be the search anchor.
	End Rem
	Method SearchAnchor()
		
	End Method

	Rem
	bbdoc: Find some text starting at the search anchor.
	about: Does not ensure the selection is visible.
	End Rem
	Method SearchNext:Int(flags:Int, text:String)
		
	End Method

	Rem
	bbdoc: Find some text starting at the search anchor and moving backwards.
	about: Does not ensure the selection is visible.
	End Rem
	Method SearchPrev:Int(flags:Int, text:String)
		
	End Method

	Rem
	bbdoc: Retrieves the number of lines completely visible.
	End Rem
	Method LinesOnScreen:Int()
		
	End Method

	Rem
	bbdoc: Set whether a pop up menu is displayed automatically when the user presses
	about: the wrong mouse button.
	End Rem
	Method UsePopUp(allowPopUp:Int)
		
	End Method

	Rem
	bbdoc: Is the selection rectangular? The alternative is the more common stream selection.
	End Rem
	Method SelectionIsRectangle:Int()
		
	End Method

	Rem
	bbdoc: Set the zoom level. This number of points is added to the size of all fonts.
	about: It may be positive to magnify or negative to reduce.
	End Rem
	Method SetZoom(zoom:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the zoom level.
	End Rem
	Method GetZoom:Int()
		
	End Method

	Rem
	bbdoc: Create a new document object.
	about: Starts with reference count of 1 and not selected into editor.
	End Rem
	Method CreateDocument:Byte Ptr()
		
	End Method

	Rem
	bbdoc: Extend life of document.
	End Rem
	Method AddRefDocument(docPointer:Byte Ptr)
		
	End Method

	Rem
	bbdoc: Release a reference to the document, deleting document if it fades to black.
	End Rem
	Method ReleaseDocument(docPointer:Byte Ptr)
		
	End Method

	Rem
	bbdoc: Get which document modification events are sent to the container.
	End Rem
	Method GetModEventMask:Int()
		
	End Method

	Rem
	bbdoc: Change internal focus flag.
	End Rem
	Method SetSCIFocus(focus:Int)
		
	End Method

	Rem
	bbdoc: Get internal focus flag.
	End Rem
	Method GetSCIFocus:Int()
		
	End Method

	Rem
	bbdoc: Change error status - 0 = OK.
	End Rem
	Method SetStatus(statusCode:Int)
		
	End Method

	Rem
	bbdoc: Get error status.
	End Rem
	Method GetStatus:Int()
		
	End Method

	Rem
	bbdoc: Set whether the mouse is captured when its button is pressed.
	End Rem
	Method SetMouseDownCaptures(captures:Int)
		
	End Method

	Rem
	bbdoc: Get whether mouse gets captured.
	End Rem
	Method GetMouseDownCaptures:Int()
		
	End Method

	Rem
	bbdoc: Sets the cursor to one of the SC_CURSOR* values.
	End Rem
	Method SetSCICursor(cursorType:Int)
		
	End Method

	Rem
	bbdoc: Change the way control characters are displayed:
	about: If symbol is < 32, keep the drawn way, else, use the given character.
	End Rem
	Method SetControlCharSymbol(symbol:Int)
		
	End Method

	Rem
	bbdoc: Get the way control characters are displayed.
	End Rem
	Method GetControlCharSymbol:Int()
		
	End Method

	Rem
	bbdoc: Move to the previous change in capitalisation.
	End Rem
	Method WordPartLeft()
		
	End Method

	Rem
	bbdoc: Move to the previous change in capitalisation extending selection
	about: to new caret position.
	End Rem
	Method WordPartLeftExtend()
		
	End Method

	Rem
	bbdoc: Move to the change next in capitalisation.
	End Rem
	Method WordPartRight()
		
	End Method

	Rem
	bbdoc: Move to the next change in capitalisation extending selection
	about: to new caret position.
	End Rem
	Method WordPartRightExtend()
		
	End Method

	Rem
	bbdoc: Set the way the display area is determined when a particular line
	about: is to be moved to by Find, FindNext, GotoLine, etc.
	End Rem
	Method SetVisiblePolicy(visiblePolicy:Int, visibleSlop:Int)
		
	End Method

	Rem
	bbdoc: Delete back from the current position to the start of the line.
	End Rem
	Method DelLineLeft()
		
	End Method

	Rem
	bbdoc: Delete forwards from the current position to the end of the line.
	End Rem
	Method DelLineRight()
		
	End Method

	Rem
	bbdoc: Get and Set the xOffset (ie, horizonal scroll position).
	End Rem
	Method SetXOffset(newOffset:Int)
		
	End Method

	Rem
	bbdoc: Get and Set the xOffset (ie, horizonal scroll position).
	End Rem
	Method GetXOffset:Int()
		
	End Method

	Rem
	bbdoc: Set the last x chosen value to be the caret x position.
	End Rem
	Method ChooseCaretX()
		
	End Method

	Rem
	bbdoc: Set the way the caret is kept visible when going sideway.
	about: The exclusion zone is given in pixels.
	End Rem
	Method SetXCaretPolicy(caretPolicy:Int, caretSlop:Int)
		
	End Method

	Rem
	bbdoc: Set the way the line the caret is on is kept visible.
	about: The exclusion zone is given in lines.
	End Rem
	Method SetYCaretPolicy(caretPolicy:Int, caretSlop:Int)
		
	End Method

	Rem
	bbdoc: Set printing to line wrapped (SC_WRAP_WORD) or not line wrapped (SC_WRAP_NONE).
	End Rem
	Method SetPrintWrapMode(mode:Int)
		
	End Method

	Rem
	bbdoc: Is printing line wrapped?
	End Rem
	Method GetPrintWrapMode:Int()
		
	End Method

	Rem
	bbdoc: Set a fore colour for active hotspots.
	End Rem
	Method SetHotspotActiveForeground(useSetting:Int, fore:wxColour)
		
	End Method

	Rem
	bbdoc: Set a back colour for active hotspots.
	End Rem
	Method SetHotspotActiveBackground(useSetting:Int, back:wxColour)
		
	End Method

	Rem
	bbdoc: Enable / Disable underlining active hotspots.
	End Rem
	Method SetHotspotActiveUnderline(underline:Int)
		
	End Method

	Rem
	bbdoc: Limit hotspots to single line so hotspots on two lines don't merge.
	End Rem
	Method SetHotspotSingleLine(singleLine:Int)
		
	End Method

	Rem
	bbdoc: Move caret between paragraphs (delimited by empty lines).
	End Rem
	Method ParaDown()
		
	End Method

	Rem
	bbdoc: Move caret between paragraphs (delimited by empty lines).
	End Rem
	Method ParaDownExtend()
		
	End Method

	Rem
	bbdoc: Move caret between paragraphs (delimited by empty lines).
	End Rem
	Method ParaUp()
		
	End Method

	Rem
	bbdoc: Move caret between paragraphs (delimited by empty lines).
	End Rem
	Method ParaUpExtend()
		
	End Method

	Rem
	bbdoc: Given a valid document position, return the previous position taking code
	about: page into account. Returns 0 if passed 0.
	End Rem
	Method PositionBefore:Int(pos:Int)
		
	End Method

	Rem
	bbdoc: Given a valid document position, return the next position taking code
	about: page into account. Maximum value returned is the last position in the document.
	End Rem
	Method PositionAfter:Int(pos:Int)
		
	End Method

	Rem
	bbdoc: Copy a range of text to the clipboard. Positions are clipped into the document.
	End Rem
	Method CopyRange(startPos:Int, endPos:Int)
		
	End Method

	Rem
	bbdoc: Set the selection mode to stream (SC_SEL_STREAM) or rectangular (SC_SEL_RECTANGLE) or
	about: by lines (SC_SEL_LINES).
	End Rem
	Method SetSelectionMode(mode:Int)
		
	End Method

	Rem
	bbdoc: Get the mode of the current selection.
	End Rem
	Method GetSelectionMode:Int()
		
	End Method

	Rem
	bbdoc: Retrieve the position of the start of the selection at the given line (INVALID_POSITION if no selection on this line).
	End Rem
	Method GetLineSelStartPosition:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the position of the end of the selection at the given line (INVALID_POSITION if no selection on this line).
	End Rem
	Method GetLineSelEndPosition:Int(line:Int)
		
	End Method

	Rem
	bbdoc: Move caret down one line, extending rectangular selection to new caret position.
	End Rem
	Method LineDownRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret up one line, extending rectangular selection to new caret position.
	End Rem
	Method LineUpRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret left one character, extending rectangular selection to new caret position.
	End Rem
	Method CharLeftRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret right one character, extending rectangular selection to new caret position.
	End Rem
	Method CharRightRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret to first position on line, extending rectangular selection to new caret position.
	End Rem
	Method HomeRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret to before first visible character on line.
	about: If already there move to first character on line.
	In either case, extend rectangular selection to new caret position.
	End Rem
	Method VCHomeRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret to last position on line, extending rectangular selection to new caret position.
	End Rem
	Method LineEndRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret one page up, extending rectangular selection to new caret position.
	End Rem
	Method PageUpRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret one page down, extending rectangular selection to new caret position.
	End Rem
	Method PageDownRectExtend()
		
	End Method

	Rem
	bbdoc: Move caret to top of page, or one page up if already at top of page.
	End Rem
	Method StutteredPageUp()
		
	End Method

	Rem
	bbdoc: Move caret to top of page, or one page up if already at top of page, extending selection to new caret position.
	End Rem
	Method StutteredPageUpExtend()
		
	End Method

	Rem
	bbdoc: Move caret to bottom of page, or one page down if already at bottom of page.
	End Rem
	Method StutteredPageDown()
		
	End Method

	Rem
	bbdoc: Move caret to bottom of page, or one page down if already at bottom of page, extending selection to new caret position.
	End Rem
	Method StutteredPageDownExtend()
		
	End Method

	Rem
	bbdoc: Move caret left one word, position cursor at end of word.
	End Rem
	Method WordLeftEnd()
		
	End Method

	Rem
	bbdoc: Move caret left one word, position cursor at end of word, extending selection to new caret position.
	End Rem
	Method WordLeftEndExtend()
		
	End Method

	Rem
	bbdoc: Move caret right one word, position cursor at end of word.
	End Rem
	Method WordRightEnd()
		
	End Method

	Rem
	bbdoc: Move caret right one word, position cursor at end of word, extending selection to new caret position.
	End Rem
	Method WordRightEndExtend()
		
	End Method

	Rem
	bbdoc: Set the set of characters making up whitespace for when moving or selecting by word.
	about: Should be called after SetWordChars.
	End Rem
	Method SetWhitespaceChars(characters:String)
		
	End Method

	Rem
	bbdoc: Reset the set of characters for whitespace and word characters to the defaults.
	End Rem
	Method SetCharsDefault()
		
	End Method

	Rem
	bbdoc: Get currently selected item position in the auto-completion list
	End Rem
	Method AutoCompGetCurrent:Int()
		
	End Method

	Rem
	bbdoc: Enlarge the document to a particular size of text bytes.
	End Rem
	Method Allocate(bytes:Int)
		
	End Method

	Rem
	bbdoc: Find the position of a column on a line taking into account tabs and
	about: multi-byte characters. If beyond end of line, return line end position.
	End Rem
	Method FindColumn:Int(line:Int, column:Int)
		
	End Method

	Rem
	bbdoc: Can the caret preferred x position only be changed by explicit movement commands?
	End Rem
	Method GetCaretSticky:Int()
		
	End Method

	Rem
	bbdoc: Stop the caret preferred x position changing when the user types.
	End Rem
	Method SetCaretSticky(useCaretStickyBehaviour:Int)
		
	End Method

	Rem
	bbdoc: Switch between sticky and non-sticky: meant to be bound to a key.
	End Rem
	Method ToggleCaretSticky()
		
	End Method

	Rem
	bbdoc: Enable/Disable convert-on-paste for line endings
	End Rem
	Method SetPasteConvertEndings(convert:Int)
		
	End Method

	Rem
	bbdoc: Get convert-on-paste setting
	End Rem
	Method GetPasteConvertEndings:Int()
		
	End Method

	Rem
	bbdoc: Duplicate the selection. If selection empty duplicate the line containing the caret.
	End Rem
	Method SelectionDuplicate()
		
	End Method

	Rem
	bbdoc: Set background alpha of the caret line.
	End Rem
	Method SetCaretLineBackgroundAlpha(alpha:Int)
		
	End Method

	Rem
	bbdoc: Get the background alpha of the caret line.
	End Rem
	Method GetCaretLineBackgroundAlpha:Int()
		
	End Method

	Rem
	bbdoc: Start notifying the container of all key presses and commands.
	End Rem
	Method StartRecord()
		
	End Method

	Rem
	bbdoc: Stop notifying the container of all key presses and commands.
	End Rem
	Method StopRecord()
		
	End Method

	Rem
	bbdoc: Set the lexing language of the document.
	End Rem
	Method SetLexer(lexer:Int)
		
	End Method

	Rem
	bbdoc: Retrieve the lexing language of the document.
	End Rem
	Method GetLexer:Int()
		
	End Method

	Rem
	bbdoc: Colourise a segment of the document using the current lexing language.
	End Rem
	Method Colourise(startPos:Int, endPos:Int)
		
	End Method

	Rem
	bbdoc: Set up a value that may be used by a lexer for some optional feature.
	End Rem
	Method SetProperty(key:String, value:String)
		
	End Method

	Rem
	bbdoc: Set up the key words used by the lexer.
	End Rem
	Method SetKeyWords(keywordSet:Int, keyWords:String)
		
	End Method

	Rem
	bbdoc: Set the lexing language of the document based on string name.
	End Rem
	Method SetLexerLanguage(language:String)
		
	End Method

	Rem
	bbdoc: Retrieve a "property" value previously set with SetProperty.
	End Rem
	Method GetProperty:String(key:String)
		
	End Method

	Rem
	bbdoc: Retrieve a "property" value previously set with SetProperty,
	about: with "$()" variable replacement on returned buffer.
	End Rem
	Method GetPropertyExpanded:String(key:String)
		
	End Method

	Rem
	bbdoc: Retrieve a "property" value previously set with SetProperty,
	about: interpreted as an int AFTER any "$()" variable replacement.
	End Rem
	Method GetPropertyInt:Int(key:String)
		
	End Method

	Rem
	bbdoc: Retrieve the number of bits the current lexer needs for styling.
	End Rem
	Method GetStyleBitsNeeded:Int()
		
	End Method

	' //--Autogenerated
	' End of the generated code...

	Method GetCurrentLine:Int()
	End Method
	
	Method StyleSetSpec(styleNum:Int, spec:String)
	End Method
	
	Method StyleSetFontFont(styleNum:Int, font:wxFont)
	End Method
	
	Method StyleSetFontAttr(styleNum:Int, size:Int, faceName:String, bold:Int, italic:Int, underline:Int, ..
			encoding:Int = wxFONTENCODING_DEFAULT)
	End Method
	
	'Method StyleSetCharacterSet(style:Int, characterSet:Int)
	'End Method
	
	Method StyleSetFontEncoding (style:Int, encoding:Int)
	End Method
	
	Method CmdKeyExecute(cmd:Int)
	End Method
	
	Method SetMargins(leftMargin:Int, rightMargin:Int)
	End Method
	
	Method GetSelection(startPos:Int Var, endPos:Int Var)
	End Method
	
	Method PointFromPosition(pos:Int, x:Int Var, y:Int Var)
	End Method
	
	Method ScrollToLine(line:Int)
	End Method
	
	Method ScrollToColumn(column:Int)
	End Method
	
	Method SendMsg:Int(msg:Int, wp:Int = 0, lp:Int = 0)
	End Method
	
	Method SetVScrollBar(bar:wxScrollBar)
	End Method
	
	Method SetHScrollBar(bar:wxScrollBar)
	End Method
	
	Method GetLastKeydownProcessed:Int()
	End Method
	
	Method SetLastKeydownProcessed(val:Int)
	End Method
	
	Method SaveFile:Int(filename:String)
	End Method
	
	Method LoadFile:Int(filename:String)
	End Method
	
	'wxDragResult DoDragOver (wxCoord x, wxCoord y, wxDragResult def);
	
	'bool DoDropText (Long x, Long y, Const wxString& data);
	
	'wxDragResult DoDragEnter (wxCoord x, wxCoord y, wxDragResult def);
	
	'void DoDragLeave ();
	
	Method SetUseAntiAliasing(useAA:Int)
	End Method
	
	Method GetUseAntiAliasing:Int()
	End Method


End Type


